module org/sugarj/transformations/Analyze
imports
  org/sugarj/languages/Sugar
rules
  analyze-main = repeat(change-annotations-only(analyze))
  analyze = fail
  get-anno(|key) = get-annotations; !(key,<id>); lookup
  put-anno(|key,val) =
    where((get-annotations <+ ![]) => annos);
    if <equal> (<lookup> (key, annos), val)
      then id
      else !(<id>,[(key,val)| <filter(not(?(key,_)))> annos]); set-annotations
    end
    

  sugarj-analyze:
    (ast, path, project-path) -> (ast, errors, warnings, notes)
    with
      editor-init;
      try(analyze);
      errors   := <collect-all(constraint-error, conc)> ast;
      warnings := <collect-all(constraint-warning, conc)> ast;
      notes    := <collect-all(constraint-note, conc)> ast

    editor-init =
      // Ensure all dynamic rules are properly scoped
      try(dr-scope-all-end);
      dr-scope-all-start

    constraint-error = fail
    constraint-warning = fail
    constraint-note = fail


  change-annotations-only(s) = ?t; s => t2; where(!(t,t2); not(equal); structurally-equal) 
  structurally-equal = ?(c#(xs),d#(ys)); <equal> (c,d); <zip(structurally-equal)> (xs, ys)
  
rules
  // desugar =
  //   changed-tree(desugar-analyses)
  //   
  // desugar-analyses : 
  // 	Analyses(strats) -> Strategies()